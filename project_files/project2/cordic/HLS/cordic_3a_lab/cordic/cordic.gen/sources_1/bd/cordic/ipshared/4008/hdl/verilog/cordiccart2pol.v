// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cordiccart2pol_cordiccart2pol,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.229000,HLS_SYN_LAT=39,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=424,HLS_SYN_LUT=1172,HLS_VERSION=2024_2}" *)

module cordiccart2pol (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] x;
wire   [15:0] y;
wire   [15:0] r;
reg    r_ap_vld;
reg    theta_ap_vld;
wire   [0:0] icmp_ln100_fu_157_p2;
reg   [0:0] icmp_ln100_reg_419;
wire   [15:0] x_1_fu_177_p3;
reg   [15:0] x_1_reg_424;
wire   [15:0] y_1_fu_191_p3;
reg   [15:0] y_1_reg_429;
reg   [0:0] tmp_reg_434;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln100_1_fu_236_p2;
reg   [0:0] icmp_ln100_1_reg_440;
wire   [10:0] select_ln100_1_fu_254_p3;
reg   [10:0] select_ln100_1_reg_445;
wire   [0:0] icmp_ln100_2_fu_262_p2;
reg   [0:0] icmp_ln100_2_reg_452;
wire   [0:0] icmp_ln100_4_fu_278_p2;
reg   [0:0] icmp_ln100_4_reg_458;
wire   [15:0] trunc_ln100_1_fu_291_p1;
reg   [15:0] trunc_ln100_1_reg_463;
wire    ap_CS_fsm_state3;
wire   [15:0] select_ln100_2_fu_320_p3;
reg   [15:0] select_ln100_2_reg_468;
wire   [15:0] select_ln100_3_fu_337_p3;
reg   [15:0] select_ln100_3_reg_473;
wire   [15:0] ans_theta_fu_361_p9;
reg   [15:0] ans_theta_reg_478;
wire    ap_CS_fsm_state4;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_start;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_done;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_idle;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_ready;
wire   [15:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ans_theta_2_out;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ans_theta_2_out_ap_vld;
wire   [15:0] grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_x_3_out;
wire    grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_x_3_out_ap_vld;
reg    grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_start_reg;
wire    ap_CS_fsm_state5;
reg   [15:0] ans_theta_2_loc_fu_116;
reg  signed [15:0] x_3_loc_fu_112;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_3_fu_163_p3;
wire   [15:0] sub_ln106_fu_171_p2;
wire   [15:0] sub_ln107_fu_185_p2;
wire   [63:0] select_ln716_fu_199_p3;
wire   [10:0] tmp_1_fu_214_p3;
wire   [11:0] zext_ln100_fu_222_p1;
wire   [11:0] sub_ln100_fu_226_p2;
wire   [10:0] trunc_ln100_fu_232_p1;
wire   [10:0] add_ln100_fu_242_p2;
wire   [10:0] sub_ln100_1_fu_248_p2;
wire   [6:0] tmp_2_fu_268_p4;
wire   [53:0] select_ln100_fu_284_p3;
wire   [53:0] zext_ln100_2_fu_307_p1;
wire   [53:0] ashr_ln100_fu_310_p2;
wire   [0:0] icmp_ln100_3_fu_295_p2;
wire   [15:0] trunc_ln100_2_fu_316_p1;
wire   [15:0] select_ln100_4_fu_300_p3;
wire   [15:0] select_ln100_1cast_fu_328_p1;
wire   [15:0] shl_ln100_fu_331_p2;
wire   [0:0] xor_ln100_fu_344_p2;
wire   [0:0] and_ln100_fu_349_p2;
wire   [15:0] ans_theta_fu_361_p7;
wire   [1:0] ans_theta_fu_361_p8;
wire   [13:0] mul_ln128_fu_390_p1;
wire   [28:0] mul_ln128_fu_390_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire  signed [1:0] ans_theta_fu_361_p1;
wire   [1:0] ans_theta_fu_361_p3;
wire   [1:0] ans_theta_fu_361_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_start_reg = 1'b0;
end

cordiccart2pol_cordiccart2pol_Pipeline_VITIS_LOOP_115_1 grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_start),
    .ap_done(grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_done),
    .ap_idle(grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_idle),
    .ap_ready(grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_ready),
    .ans_theta(ans_theta_reg_478),
    .y_1(y_1_reg_429),
    .x_1(x_1_reg_424),
    .ans_theta_2_out(grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ans_theta_2_out),
    .ans_theta_2_out_ap_vld(grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ans_theta_2_out_ap_vld),
    .x_3_out(grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_x_3_out),
    .x_3_out_ap_vld(grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_x_3_out_ap_vld)
);

cordiccart2pol_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .x(x),
    .y(y),
    .r(r),
    .r_ap_vld(r_ap_vld),
    .theta(ans_theta_2_loc_fu_116),
    .theta_ap_vld(theta_ap_vld),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

(* dissolve_hierarchy = "yes" *) cordiccart2pol_sparsemux_7_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 16 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 16 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 16 ),
    .def_WIDTH( 16 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
sparsemux_7_2_16_1_1_U7(
    .din0(trunc_ln100_1_reg_463),
    .din1(select_ln100_2_reg_468),
    .din2(select_ln100_3_reg_473),
    .def(ans_theta_fu_361_p7),
    .sel(ans_theta_fu_361_p8),
    .dout(ans_theta_fu_361_p9)
);

cordiccart2pol_mul_16s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
mul_16s_14ns_29_1_1_U8(
    .din0(x_3_loc_fu_112),
    .din1(mul_ln128_fu_390_p1),
    .dout(mul_ln128_fu_390_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_start_reg <= 1'b1;
        end else if ((grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_ready == 1'b1)) begin
            grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ans_theta_2_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ans_theta_2_loc_fu_116 <= grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ans_theta_2_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ans_theta_reg_478 <= ans_theta_fu_361_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln100_1_reg_440 <= icmp_ln100_1_fu_236_p2;
        icmp_ln100_2_reg_452 <= icmp_ln100_2_fu_262_p2;
        icmp_ln100_4_reg_458 <= icmp_ln100_4_fu_278_p2;
        select_ln100_1_reg_445[10 : 1] <= select_ln100_1_fu_254_p3[10 : 1];
        tmp_reg_434 <= select_ln716_fu_199_p3[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln100_reg_419 <= icmp_ln100_fu_157_p2;
        x_1_reg_424 <= x_1_fu_177_p3;
        y_1_reg_429 <= y_1_fu_191_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        select_ln100_2_reg_468 <= select_ln100_2_fu_320_p3;
        select_ln100_3_reg_473 <= select_ln100_3_fu_337_p3;
        trunc_ln100_1_reg_463[15 : 4] <= trunc_ln100_1_fu_291_p1[15 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_x_3_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        x_3_loc_fu_112 <= grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_x_3_out;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        r_ap_vld = 1'b1;
    end else begin
        r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        theta_ap_vld = 1'b1;
    end else begin
        theta_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_fu_242_p2 = ($signed(trunc_ln100_fu_232_p1) + $signed(11'd2035));

assign and_ln100_fu_349_p2 = (xor_ln100_fu_344_p2 & icmp_ln100_1_reg_440);

assign ans_theta_fu_361_p7 = 'bx;

assign ans_theta_fu_361_p8 = {{icmp_ln100_2_reg_452}, {and_ln100_fu_349_p2}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln100_fu_310_p2 = $signed(select_ln100_fu_284_p3) >>> zext_ln100_2_fu_307_p1;

assign grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_start = grp_cordiccart2pol_Pipeline_VITIS_LOOP_115_1_fu_146_ap_start_reg;

assign icmp_ln100_1_fu_236_p2 = (($signed(sub_ln100_fu_226_p2) > $signed(12'd13)) ? 1'b1 : 1'b0);

assign icmp_ln100_2_fu_262_p2 = ((sub_ln100_fu_226_p2 == 12'd13) ? 1'b1 : 1'b0);

assign icmp_ln100_3_fu_295_p2 = ((select_ln100_1_reg_445 < 11'd54) ? 1'b1 : 1'b0);

assign icmp_ln100_4_fu_278_p2 = ((tmp_2_fu_268_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln100_fu_157_p2 = (($signed(y) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign mul_ln128_fu_390_p1 = 29'd4974;

assign r = {{mul_ln128_fu_390_p2[28:13]}};

assign select_ln100_1_fu_254_p3 = ((icmp_ln100_1_fu_236_p2[0:0] == 1'b1) ? add_ln100_fu_242_p2 : sub_ln100_1_fu_248_p2);

assign select_ln100_1cast_fu_328_p1 = select_ln100_1_reg_445;

assign select_ln100_2_fu_320_p3 = ((icmp_ln100_3_fu_295_p2[0:0] == 1'b1) ? trunc_ln100_2_fu_316_p1 : select_ln100_4_fu_300_p3);

assign select_ln100_3_fu_337_p3 = ((icmp_ln100_4_reg_458[0:0] == 1'b1) ? shl_ln100_fu_331_p2 : 16'd0);

assign select_ln100_4_fu_300_p3 = ((tmp_reg_434[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln100_fu_284_p3 = ((tmp_reg_434[0:0] == 1'b1) ? 54'd10940160757453544 : 54'd7074237752028440);

assign select_ln716_fu_199_p3 = ((icmp_ln100_reg_419[0:0] == 1'b1) ? 64'd4609753056924675352 : 64'd13833125093779451160);

assign shl_ln100_fu_331_p2 = trunc_ln100_1_fu_291_p1 << select_ln100_1cast_fu_328_p1;

assign sub_ln100_1_fu_248_p2 = (11'd13 - trunc_ln100_fu_232_p1);

assign sub_ln100_fu_226_p2 = (12'd1075 - zext_ln100_fu_222_p1);

assign sub_ln106_fu_171_p2 = (16'd0 - y);

assign sub_ln107_fu_185_p2 = (16'd0 - x);

assign tmp_1_fu_214_p3 = {{select_ln716_fu_199_p3[62:52]}};

assign tmp_2_fu_268_p4 = {{select_ln100_1_fu_254_p3[10:4]}};

assign tmp_3_fu_163_p3 = y[32'd15];

assign trunc_ln100_1_fu_291_p1 = select_ln100_fu_284_p3[15:0];

assign trunc_ln100_2_fu_316_p1 = ashr_ln100_fu_310_p2[15:0];

assign trunc_ln100_fu_232_p1 = sub_ln100_fu_226_p2[10:0];

assign x_1_fu_177_p3 = ((tmp_3_fu_163_p3[0:0] == 1'b1) ? sub_ln106_fu_171_p2 : y);

assign xor_ln100_fu_344_p2 = (icmp_ln100_2_reg_452 ^ 1'd1);

assign y_1_fu_191_p3 = ((tmp_3_fu_163_p3[0:0] == 1'b1) ? x : sub_ln107_fu_185_p2);

assign zext_ln100_2_fu_307_p1 = select_ln100_1_reg_445;

assign zext_ln100_fu_222_p1 = tmp_1_fu_214_p3;

always @ (posedge ap_clk) begin
    select_ln100_1_reg_445[0] <= 1'b1;
    trunc_ln100_1_reg_463[3:0] <= 4'b1000;
end

endmodule //cordiccart2pol
